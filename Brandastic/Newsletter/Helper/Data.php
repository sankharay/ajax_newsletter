<?php
/**
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Brandastic.com
 *
 * @category    Brandastic
 * @package     Brandastic_Newsletter
 * @copyright   Copyright (c) 2019-2020 brandastic. All rights reserved. (http://www.brandastic.com/)
 * @license     https://www.brandastic.com/LICENSE.txt
 */

namespace Brandastic\Newsletter\Helper;

use Magento\Framework\View\Element\Template;
use Magento\SalesRule\Model\CouponFactory;
use Magento\Framework\Stdlib\DateTime;
use Magento\Framework\Stdlib\DateTime\DateTime as date;
use Magento\SalesRule\Model\Coupon\Codegenerator;
use Magento\Framework\Session\SessionManagerInterface as Session;

/**
 * Class Landing
 * @package Brandastic\Newsletter\Block
 */
class Data extends Template
{

    protected $data;
    /*
     * @var Magento\SalesRule\Model\Coupon\Codegenerator
     */
    protected $couponFactory;
    /*
     * @var Magento\Framework\Stdlib\DateTime
     */
    protected $dateTime;
    /*
     * @var Magento\Framework\Stdlib\DateTime\DateTime as date
     */
    protected $date;
    /*
     * @var Magento\SalesRule\Model\Coupon\Codegenerator
     */
    protected $codeGenerator;
    /*
     * @var Magento\Framework\Session\SessionManagerInterface as Session
     */
    protected $_session;

    public function __construct(Template\Context $context,
                                couponFactory $couponFactory,
                                DateTime $dateTime,
                                date $date,
                                Codegenerator $codeGenerator,
                                Session $session,
                                array $data = [])
    {
        $this->_storeManager = $context->getStoreManager();
        $this->_scopeConfig = $context->getScopeConfig();
        $this->couponFactory = $couponFactory;
        $this->dateTime = $dateTime;
        $this->date = $date;
        $this->codeGenerator = $codeGenerator;
        $this->_session = $session;
        parent::__construct($context, $data);
    }

    public function getCouponCode(){
        $couponCode = $this->codeGenerator->generateCode();
        if($couponCode){
            if($this->_scopeConfig->getValue('brandastic_newsletter/brandastic_newsletter/brandastic_newsletter_status', \Magento\Store\Model\ScopeInterface::SCOPE_STORE) == '1'){
                    $salesRuleId = $this->_scopeConfig->getValue('brandastic_newsletter/brandastic_newsletter/brandastic_newsletter_salesrule', \Magento\Store\Model\ScopeInterface::SCOPE_STORE);
                    if($salesRuleId != '' AND is_numeric($salesRuleId)){
                        $coupon = $this->couponFactory->create();
                        $nowTimestamp = $this->dateTime->formatDate($this->date->gmtTimestamp());
                        $coupon->setId(null)
                            ->setRuleId($salesRuleId)
                            ->setUsageLimit('1')
                            ->setUsagePerCustomer('1')
                            ->setExpirationDate('')
                            ->setCreatedAt($nowTimestamp)
                            ->setType(\Magento\SalesRule\Helper\Coupon::COUPON_TYPE_SPECIFIC_AUTOGENERATED)
                            ->setCode($couponCode)
                            ->save();
                            $emailTemplateVariables = array();
                            $emailTemplateVariables = [
                                'couponcode' => $couponCode
                            ];
                        $this->_session->start();
                        $this->_session->setBrandasticCoupon($couponCode);
                        return $this->_session->getBrandasticCoupon();
                    }
            }

        }
    }


}
